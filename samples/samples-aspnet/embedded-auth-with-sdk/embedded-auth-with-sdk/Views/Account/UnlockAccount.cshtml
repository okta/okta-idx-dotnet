@model embedded_auth_with_sdk.Models.UnlockAccountViewModel

@{
    ViewBag.Title = "Unlock your account";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<hr />
<div class="row d-center">
    <div class="col-md-8">
        <section id="selectAuthenticatorForm">
            @using (Html.BeginForm("SelectUnlockAccountAuthenticatorAsync", "Manage", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Unlock your account</h4>
                <h5>Enter your username and select an authenticator</h5>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger", @id = "validationErrorMessage" })

                <div class="form-group">
                    <div class="col-md-10 col-md-offset-2">
                        <div class="row row-no-gutters">
                            @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                        </div>
                        <div class="row row-no-gutters">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.PasswordId)
                @Html.HiddenFor(m => m.PhoneId)
                @Html.HiddenFor(m => m.WebAuthnId)
                @Html.HiddenFor(m => m.OktaVerifyId)
                @Html.HiddenFor(m => m.TotpId)
                <div class="form-group">
                    <div class="col-md-10 col-md-offset-2">
                        <ul class="no-padding-left">
                            @foreach (var authenticator in Model.Authenticators)
                            {
                                <div>
                                    <label>
                                        @Html.RadioButtonFor(m => m.AuthenticatorId, authenticator.AuthenticatorId)
                                        @authenticator.Name
                                    </label>
                                </div>
                            }
                        </ul>
                    </div>
                </div>
                @Html.ValidationMessageFor(m => m.AuthenticatorId, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary btn-stretch-wide" />
                    </div>
                </div>
            }
            @if (Model.CanSkip)
            {
                using (Html.BeginForm("SkipAuthenticatorSelectionAsync", "Manage", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    <div class="form-group">
                        <div class="col-md-offset-0 col-md-10">
                            <input type="submit" name="skip" value="Skip this step" class="btn btn-info btn-stretch-wide" />
                        </div>
                    </div>
                }

            }

        </section>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
