@model embedded_auth_with_sdk.Models.VerifyWebAuthnViewModel
@{
    ViewBag.Title = ViewBag.Title ?? "Verify your Web Authn authenticator.";
}

<hr />

<div class="row d-center">
    <div class="col-md-8">
        <section id="forgotPasswordForm">
            <h4>Verify your Web Authn authenticator.</h4>
        </section>
    </div>
</div>

<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function() {
        const challenge = '@Model.Challenge';
        const webauthnCredentialId = '@Model.WebAuthnCredentialId';
        const publicKeyCredentialRequestOptions = {
            challenge: strToBin(challenge),
            allowCredentials: [
                {
                    id: strToBin(webauthnCredentialId),
                    type: 'public-key',
                }
            ],
            userVerification: 'discouraged',
            timeout: 60000,
        };

        navigator.credentials.get({
                publicKey: publicKeyCredentialRequestOptions
            })
            .then((assertion) => {
                const clientData = binToStr(assertion.response.clientDataJSON);
                const authenticatorData = binToStr(assertion.response.authenticatorData);
                const signatureData = binToStr(assertion.response.signature);

                const params = {
                    "clientData": clientData,
                    "authenticatorData": authenticatorData,
                    "signatureData": signatureData
                };

                const options = {
                    method: 'POST',
                    body: JSON.stringify(params),
                    headers: { "Content-type": "application/json; charset=UTF-8" }
                };

                fetch('@Url.Action("VerifyWebAuthnAuthenticatorAsync", "Manage")', options)
                    .then(res => {
                        console.log("Request successful! Response:", res);
                        location.href = '@Url.Action("VerifyWebAuthnAuthenticator", "Manage", new { verificationCompleted = true })';
                    })
                    .catch(function(err) {
                        console.error(err);
                    });
            })
            .catch(function (err) {
                console.error(err);
            });
    }, false);
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/idx-utils")
}